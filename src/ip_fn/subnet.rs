pub fn sn(mask: u16) -> Vec<u16> {
    
    if mask >= 24 && mask <= 30 {
        match mask {
            24 => vec![255, 255, 255, 0],
            // 11111111.11111111.11111111.00000000 = 24 bits on
            // In decimal => 255.255.255.0

            25 => vec![255, 255, 255, 128],
            // 11111111.11111111.11111111.10000000 = 25 bits on
            // In decimal => 255.255.255.128

            26 => vec![255, 255, 255, 192],
            // 11111111.11111111.11111111.11000000 = 26 bits on
            // In decimal => 255.255.255.192

            27 => vec![255, 255, 255, 224],
            // 11111111.11111111.11111111.11100000 = 27 bits on
            // In decimal => 255.255.255.224

            28 => vec![255, 255, 255, 240],
            // 11111111.11111111.11111111.11110000 = 28 bits on
            // In decimal => 255.255.255.240

            29 => vec![255, 255, 255, 248],
            // 11111111.11111111.11111111.11111000 = 29 bits on
            // In decimal => 255.255.255.248

            30 => vec![255, 255, 255, 252],
            // 11111111.11111111.11111111.11111100 = 30 bits on
            // In decimal => 255.255.255.252

            _ => vec![],
        }
    } else {
        vec![]
    }

}
